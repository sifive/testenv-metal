#ifndef __METAL_DT_SWITCH__H
#define __METAL_DT_SWITCH__H

{% include 'template_comment.h.j2' %}

{% if 'switch' in default_drivers and default_drivers['switch'] in devices %}
{% set switches = devices[default_drivers['switch']] %}
#define __METAL_DT_NUM_SWITCHES {{ devices[switch_compatible]|length }}

{% for switch in switches %}
    {% if 'gpios' in switch %}
#define metal_{{ to_snakecase(switch.compatible[0]) }}_{{ switch.id }}_interrupt_handler metal_{{ to_snakecase(switch.gpios[0].compatible[0]) }}_source_{{ switch.gpios[1] }}_handler
    {% endif %}
    {% if 'interrupts_extended' in switch %}
#define metal_{{ to_snakecase(switch.compatible[0]) }}_{{ switch.id }}_interrupt_handler metal_{{ to_snakecase(switch.interrupts_extended[0].compatible[0]) }}_source_{{ switch.interrupts_extended[1] }}_handler
       {% if 'label' in switch %}
#define metal_switch_{{ to_snakecase(switch.label[0]) }}_interrupt_handler metal_{{ to_snakecase(switch.interrupts_extended[0].compatible[0]) }}_source_{{ switch.interrupts_extended[1] }}_handler
       {% endif %}
    {% endif %}
{% endfor %}

{% set driver_string = to_snakecase(default_drivers['switch']) %}
#define metal_switch_is_on {{ driver_string }}_is_on
#define metal_switch_enable_interrupt {{ driver_string }}_enable_interrupt
#define metal_switch_disable_interrupt {{ driver_string }}_disable_interrupt
#define metal_switch_clear_interrupt {{ driver_string }}_clear_interrupt

{% for switch in switches %}
#define metal_switch_{{ to_snakecase(switch.label[0]) }} ((struct metal_switch) { {{ switch.id }} })
{% endfor %}

{% else %}
#define __METAL_DT_NUM_SWITCHES 0
{% endif %}

#endif /* ! __METAL_DT_SWITCH__H */

