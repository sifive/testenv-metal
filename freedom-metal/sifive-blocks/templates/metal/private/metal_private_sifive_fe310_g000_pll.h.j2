/* Copyright 2020 SiFive, Inc */
/* SPDX-License-Identifier: Apache-2.0 */

#ifndef METAL__DRIVERS__SIFIVE_FE310_G000_PLL_CLOCK_H
#define METAL__DRIVERS__SIFIVE_FE310_G000_PLL_CLOCK_H

{% include 'template_comment.h.j2' %}

#include <metal/clock.h>
#include <metal/drivers/sifive_fe310_g000_hfrosc.h>
#include <metal/drivers/sifive_fe310_g000_hfxosc.h>
#include <metal/uart.h>
#include <stdbool.h>

{% if 'sifive,fe310-g000,pll' in devices %}
{% set sifive_fe310_g000_plls = devices['sifive,fe310-g000,pll'] %}

#define __METAL_DT_NUM_SIFIVE_FE310_G000_PLLS {{ sifive_fe310_g000_plls|length }}

{% if sifive_fe310_g000_plls|length > 1 %}

static const struct dt_sifive_fe310_g000_pll_clock_data {
	uint64_t init_rate;
	bool has_hfxosc;
	struct metal_clock hfrosc;
	struct metal_clock hfxosc;
} dt_clock_data[__METAL_DT_NUM_SIFIVE_FE310_G000_PLLS] = {
	{% for clk in sifive_fe310_g000_plls %}
	{
		.init_rate = {{ clk.clock_frequency[0] }},

	{% if "pllref" in clk.clock_names %}
		.has_hfxosc = true,
		/* {{ clk.clocks_by_name["pllref"].compatible[0] }} */
		.hfxosc = { {{ clk.clocks_by_name["pllref"].id }} },
	{% else %}
		.has_hfxosc = false,
	{% endif %}
		/* {{ clk.clocks_by_name["pllsel0"].compatible[0] }} */
		.hfrosc = { {{ clk.clocks_by_name["pllsel0"].id }} },
	},
	{% endfor %}
};

#define get_index(pll) ((pll).__clock_index)
#define PLL_INIT_RATE(pll) dt_clock_data[get_index(pll)].init_rate
#define PLL_HAS_HFXOSC(pll) dt_clock_data[get_index(pll)].has_hfxosc
#define PLL_HFXOSC(pll) dt_clock_data[get_index(pll)].hfrosc
#define PLL_HFROSC(pll) dt_clock_data[get_index(pll)].hfxosc

{% else %}

#define get_index(pll) 0
#define PLL_INIT_RATE(pll) {{ sifive_fe310_g000_plls[0].clock_frequency[0] }}
{% if 'pllref' in sifive_fe310_g000_plls[0].clock_names %}
#define PLL_HAS_HFXOSC(pll) true
#define PLL_HFXOSC(pll) ((struct metal_clock) { {{ sifive_fe310_g000_plls[0].clocks_by_name["pllref"].id }} })
{% else %}
#define PLL_HAS_HFXOSC(pll) false
#define PLL_HFXOSC(pll) ({ 0 })
{% endif %}
#define PLL_HFROSC(pll) ((struct metal_clock) { {{ sifive_fe310_g000_plls[0].clocks_by_name["pllsel0"].id }} })

{% endif %}

{% for compat in devices %}
    {% if 'clocks' in devices[compat][0] %}
	{% if devices[compat][0].clocks[0].compatible[0] == "sifive,fe310-g000,pll" %}
void _{{ to_snakecase(devices[compat][0].compatible[0]) }}_pre_rate_change_callback(uint32_t id);
void _{{ to_snakecase(devices[compat][0].compatible[0]) }}_post_rate_change_callback(uint32_t id);
	{% endif %}
    {% endif %}
{% endfor %}

static __inline__ void pre_rate_change_callbacks(void) {
{% if sifive_fe310_g000_plls|length == 1 %}
    {% for compat in devices %}
	{% for device in devices[compat] %}
	    {% if 'clocks' in device %}
		{% if device.clocks[0].compatible[0] == "sifive,fe310-g000,pll" %}
	    _{{ to_snakecase(device.compatible[0]) }}_pre_rate_change_callback({{ device.id }});
		{% endif %}
	    {% endif %}
	{% endfor %}
    {% endfor %}
{% endif %}
}

static __inline__ void post_rate_change_callbacks(void) {
{% if sifive_fe310_g000_plls|length == 1 %}
    {% for compat in devices %}
	{% for device in devices[compat] %}
	    {% if 'clocks' in device %}
		{% if device.clocks[0].compatible[0] == "sifive,fe310-g000,pll" %}
	    _{{ to_snakecase(device.compatible[0]) }}_post_rate_change_callback({{ device.id }});
		{% endif %}
	    {% endif %}
	{% endfor %}
    {% endfor %}
{% endif %}
}

{% endif %}

#endif
